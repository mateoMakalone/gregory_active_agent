#!/bin/bash

# Gregory Trading Agent - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[$(date '+%H:%M:%S')]${NC} $1"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–∏—Å–∞
check_service() {
    local name=$1
    local url=$2
    local port=$3
    
    if curl -f "$url" > /dev/null 2>&1; then
        print_success "$name –¥–æ—Å—Ç—É–ø–µ–Ω ($url)"
        return 0
    else
        print_error "$name –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ($url)"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–∞
check_port() {
    local port=$1
    local name=$2
    
    if lsof -Pi :$port -sTCP:LISTEN -t >/dev/null 2>&1; then
        local pid=$(lsof -ti:$port)
        print_success "$name —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç $port (PID: $pid)"
        return 0
    else
        print_error "$name –Ω–µ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç $port"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
check_process() {
    local name=$1
    local pattern=$2
    
    if pgrep -f "$pattern" > /dev/null; then
        local pid=$(pgrep -f "$pattern")
        print_success "$name –∑–∞–ø—É—â–µ–Ω (PID: $pid)"
        return 0
    else
        print_error "$name –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üìä Gregory Trading Agent - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"
    echo "========================================"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    echo ""
    
    # PostgreSQL
    if brew services list | grep postgresql@14 | grep started > /dev/null; then
        print_success "PostgreSQL –∑–∞–ø—É—â–µ–Ω"
    else
        print_error "PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
    
    # Redis
    if brew services list | grep redis | grep started > /dev/null; then
        print_success "Redis –∑–∞–ø—É—â–µ–Ω"
    else
        print_error "Redis –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
    
    echo ""
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."
    echo ""
    
    # API Server
    check_port 8000 "API Server"
    check_service "API Server" "http://127.0.0.1:8000/health" 8000
    
    # Dashboard
    check_port 8501 "Dashboard"
    check_service "Dashboard" "http://127.0.0.1:8501" 8501
    
    # Telegram Bot
    check_process "Telegram Bot" "run_bot.py"
    
    echo ""
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
    if psql -d gregory_orchestration -c "SELECT 1;" > /dev/null 2>&1; then
        print_success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö gregory_orchestration –¥–æ—Å—Ç—É–ø–Ω–∞"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü
        table_count=$(psql -d gregory_orchestration -t -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public';" 2>/dev/null | tr -d ' ')
        if [ "$table_count" -gt 0 ]; then
            print_success "–ù–∞–π–¥–µ–Ω–æ $table_count —Ç–∞–±–ª–∏—Ü –≤ –ë–î"
        else
            print_warning "–¢–∞–±–ª–∏—Ü—ã –≤ –ë–î –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        fi
    else
        print_error "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö gregory_orchestration –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    fi
    
    echo ""
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤..."
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
    if [ -f "logs/api.log" ]; then
        local api_size=$(wc -l < logs/api.log 2>/dev/null || echo "0")
        print_success "API –ª–æ–≥: $api_size —Å—Ç—Ä–æ–∫"
    else
        print_warning "API –ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    if [ -f "logs/dashboard.log" ]; then
        local dashboard_size=$(wc -l < logs/dashboard.log 2>/dev/null || echo "0")
        print_success "Dashboard –ª–æ–≥: $dashboard_size —Å—Ç—Ä–æ–∫"
    else
        print_warning "Dashboard –ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    if [ -f "logs/bot.log" ]; then
        local bot_size=$(wc -l < logs/bot.log 2>/dev/null || echo "0")
        print_success "Bot –ª–æ–≥: $bot_size —Å—Ç—Ä–æ–∫"
    else
        print_warning "Bot –ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    echo ""
    print_status "–°–≤–æ–¥–∫–∞..."
    echo ""
    
    # –ü–æ–¥—Å—á–µ—Ç —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    local running=0
    local total=5
    
    if brew services list | grep postgresql@14 | grep started > /dev/null; then ((running++)); fi
    if brew services list | grep redis | grep started > /dev/null; then ((running++)); fi
    if lsof -Pi :8000 -sTCP:LISTEN -t >/dev/null 2>&1; then ((running++)); fi
    if lsof -Pi :8501 -sTCP:LISTEN -t >/dev/null 2>&1; then ((running++)); fi
    if pgrep -f "run_bot.py" > /dev/null; then ((running++)); fi
    
    echo "–†–∞–±–æ—Ç–∞–µ—Ç: $running –∏–∑ $total –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"
    
    if [ $running -eq $total ]; then
        print_success "–í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç!"
    elif [ $running -gt 0 ]; then
        print_warning "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç"
    else
        print_error "–ù–∏ –æ–¥–∏–Ω –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    echo ""
    echo "üîó –°—Å—ã–ª–∫–∏:"
    echo "   Dashboard: http://127.0.0.1:8501"
    echo "   API:       http://127.0.0.1:8000"
    echo "   API Docs:  http://127.0.0.1:8000/docs"
    echo ""
    echo "üõ†Ô∏è  –ö–æ–º–∞–Ω–¥—ã:"
    echo "   –ó–∞–ø—É—Å–∫:    ./start_all.sh"
    echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞: ./stop_all.sh"
    echo "   –°—Ç–∞—Ç—É—Å:    ./status.sh"
}

# –ó–∞–ø—É—Å–∫
main "$@"

