#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ API —Å–µ—Ä–≤–µ—Ä–∞
"""

import sys
import asyncio
import uvicorn
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –≤ sys.path
sys.path.append(str(Path(__file__).parent.parent))

from src.api.secure_server import secure_server
from src.core.logger import setup_logging
from src.core.config import config
from loguru import logger


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        setup_logging()
        
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ API —Å–µ—Ä–≤–µ—Ä–∞...")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        host = config.get('api.host', '0.0.0.0')
        port = config.get('api.port', 8000)
        docs_enabled = config.get('api.docs_enabled', True)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á–∏ –æ—á–∏—Å—Ç–∫–∏
        await secure_server.start_cleanup_tasks()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        logger.info(f"üåê API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ {host}:{port}")
        logger.info(f"üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: {'http://' + host + ':' + str(port) + '/docs' if docs_enabled else '–æ—Ç–∫–ª—é—á–µ–Ω–∞'}")
        logger.info("üîí –í–∫–ª—é—á–µ–Ω—ã: –≤–µ–±-—Ö—É–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è, rate limiting, backpressure, retry –ø–æ–ª–∏—Ç–∏–∫–∏")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º uvicorn
        uvicorn.run(
            secure_server.app,
            host=host,
            port=port,
            log_level="info",
            access_log=True
        )
        
    except KeyboardInterrupt:
        logger.info("üõë API —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        sys.exit(1)


if __name__ == "__main__":
    asyncio.run(main())
