#!/bin/bash

# Gregory Trading Agent - –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ª–æ–∫–∞–ª—å–Ω–æ

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_status() {
    echo -e "${BLUE}[$(date '+%H:%M:%S')]${NC} $1"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    if ! command -v python3 &> /dev/null; then
        print_error "Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.9+"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
    python_version=$(python3 -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
    major=$(echo $python_version | cut -d. -f1)
    minor=$(echo $python_version | cut -d. -f2)
    
    if [ $major -lt 3 ] || ([ $major -eq 3 ] && [ $minor -lt 9 ]); then
        print_error "–¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.9+, —Ç–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $python_version"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ pip –ø–∞–∫–µ—Ç–æ–≤
    if ! python3 -c "import streamlit, pandas, plotly" 2>/dev/null; then
        print_warning "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        pip3 install -r requirements.txt
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
    if ! command -v psql &> /dev/null; then
        print_warning "PostgreSQL –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ brew..."
        brew install postgresql@14
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
    if ! command -v redis-server &> /dev/null; then
        print_warning "Redis –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ brew..."
        brew install redis
    fi
    
    print_success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
start_services() {
    print_status "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ó–∞–ø—É—Å–∫ PostgreSQL
    if ! brew services list | grep postgresql@14 | grep started > /dev/null; then
        print_status "–ó–∞–ø—É—Å–∫ PostgreSQL..."
        brew services start postgresql@14
        sleep 3
    else
        print_success "PostgreSQL —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
    fi
    
    # –ó–∞–ø—É—Å–∫ Redis
    if ! brew services list | grep redis | grep started > /dev/null; then
        print_status "–ó–∞–ø—É—Å–∫ Redis..."
        brew services start redis
        sleep 2
    else
        print_success "Redis —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
setup_database() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if ! psql -lqt | cut -d \| -f 1 | grep -qw gregory_orchestration; then
        print_status "–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö gregory_orchestration..."
        createdb gregory_orchestration
    else
        print_success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
    
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å—Ö–µ–º—ã
    print_status "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    psql gregory_orchestration < ops/sql/init.sql > /dev/null 2>&1 || true
    print_success "–°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–æ–≤
check_ports() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 8501 (Streamlit)
    if lsof -Pi :8501 -sTCP:LISTEN -t >/dev/null; then
        print_warning "–ü–æ—Ä—Ç 8501 –∑–∞–Ω—è—Ç. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞..."
        lsof -ti:8501 | xargs kill -9 2>/dev/null || true
        sleep 2
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 8000 (API)
    if lsof -Pi :8000 -sTCP:LISTEN -t >/dev/null; then
        print_warning "–ü–æ—Ä—Ç 8000 –∑–∞–Ω—è—Ç. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞..."
        lsof -ti:8000 | xargs kill -9 2>/dev/null || true
        sleep 2
    fi
    
    print_success "–ü–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
start_components() {
    print_status "–ó–∞–ø—É—Å–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Gregory Trading Agent..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –ª–æ–≥–æ–≤
    mkdir -p logs
    
    # –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ñ–æ–Ω–µ
    print_status "–ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ—Ä—Ç 8000)..."
    nohup python3 -m uvicorn app.api:app --host 127.0.0.1 --port 8000 --reload > logs/api.log 2>&1 &
    API_PID=$!
    sleep 3
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API
    if curl -f http://127.0.0.1:8000/health > /dev/null 2>&1; then
        print_success "API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (PID: $API_PID)"
    else
        print_error "API —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        return 1
    fi
    
    # –ó–∞–ø—É—Å–∫ Dashboard –≤ —Ñ–æ–Ω–µ
    print_status "–ó–∞–ø—É—Å–∫ Dashboard (–ø–æ—Ä—Ç 8501)..."
    nohup python3 -m streamlit run app/dashboard.py --server.port=8501 --server.address=127.0.0.1 > logs/dashboard.log 2>&1 &
    DASHBOARD_PID=$!
    sleep 5
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Dashboard
    if curl -f http://127.0.0.1:8501 > /dev/null 2>&1; then
        print_success "Dashboard –∑–∞–ø—É—â–µ–Ω (PID: $DASHBOARD_PID)"
    else
        print_warning "Dashboard –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤"
    fi
    
    # –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ
    print_status "–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞..."
    nohup python3 run_bot.py > logs/bot.log 2>&1 &
    BOT_PID=$!
    sleep 2
    
    print_success "Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω (PID: $BOT_PID)"
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ PID –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    echo "$API_PID" > .pids/api.pid
    echo "$DASHBOARD_PID" > .pids/dashboard.pid
    echo "$BOT_PID" > .pids/bot.pid
    
    print_success "–í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã!"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    echo ""
    echo "üéâ Gregory Trading Agent –∑–∞–ø—É—â–µ–Ω!"
    echo "=================================="
    echo ""
    echo "üìä Dashboard:    http://127.0.0.1:8501"
    echo "üîß API Server:   http://127.0.0.1:8000"
    echo "üìñ API Docs:     http://127.0.0.1:8000/docs"
    echo "üì± Telegram:     –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
    echo ""
    echo "üìù –õ–æ–≥–∏:"
    echo "   - API:        tail -f logs/api.log"
    echo "   - Dashboard:  tail -f logs/dashboard.log"
    echo "   - Bot:        tail -f logs/bot.log"
    echo ""
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞:    ./stop_all.sh"
    echo "üìä –°—Ç–∞—Ç—É—Å:       ./status.sh"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
cleanup() {
    print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ. –û—á–∏—Å—Ç–∫–∞..."
    if [ -f .pids/api.pid ]; then
        kill $(cat .pids/api.pid) 2>/dev/null || true
    fi
    if [ -f .pids/dashboard.pid ]; then
        kill $(cat .pids/dashboard.pid) 2>/dev/null || true
    fi
    if [ -f .pids/bot.pid ]; then
        kill $(cat .pids/bot.pid) 2>/dev/null || true
    fi
    rm -rf .pids
    exit 1
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "ü§ñ Gregory Trading Agent - –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫"
    echo "========================================"
    echo ""
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è PID —Ñ–∞–π–ª–æ–≤
    mkdir -p .pids
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ—à–∏–±–æ–∫
    trap cleanup EXIT
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–æ–≤
    check_dependencies
    start_services
    setup_database
    check_ports
    start_components
    
    # –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    trap - EXIT
    show_status
}

# –ó–∞–ø—É—Å–∫
main "$@"
